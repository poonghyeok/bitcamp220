1년은 365일이니까 해가 갈 수록 요일이 하나씩 뒤로 밀린다. 윤년이 두개가 밀린다. 

한국법에서는, "윤년"이란 그레고리력에서 여분의 하루인 2월 29일을 추가하여 1년 동안 날짜의 수가 366일이 되는 해를 말한다(천문법 제2조 제5호). 윤년에는 2월과 8월이 같은 요일로 시작된다.

윤달의 개념도 도입해야 하는가. 

1년이 365일이니깐 해가 갈수록 요일이 하나씩 뒤로 밀린다. 7로 나누면 왜? 몫 52 나머지 1이라서 1년이 다돌고 시작했던 자리에서 끝나는 것이 아니라 
다음자리에서 시작을 하니간. 
근데 윤년이면 1년이 366일 이니깐 요일이 두개 밀린다.
윤년만 계산하면 되나 윤달 이런건 계산 안해도되려나 어짜피 태양력을 사용하는거니깐 
4로 나누어 떨어지는 해는 윤년, 그 밖의 해는 평년으로 한다. 

100으로 나누어 떨어지지만 400으로 나누어 떨어지지 않는 해는 평년으로 한다. 
100년으로 나누어 떨어지면서 400으로 나누어 떨어지면 그 해는 윤년인데
그러면 100의 단위여서 4로 나눠진깐 윤년이 되는 것이 아니라 일단 100으로 나눠지면서 400으로도 나누어져야 윤년인 것이다. 
4로만 나눠진다고 해서 다 윤년은 안디ㅏ. 

100으로 나누어 떨어지면 4로도 나누어 떨어지니깐 윤년이 되는거다. 
400으로 나누어 떨어지면 100으로도 나누어 떨어지고 4로도 나누어 떨어지니깐 윤년이다. 
400으로 나누어 떨어지진 않지만 100으로 나누어 떨어지고 4로도 나누어 떨어진다면 평년이다.

모든 달이 해가 거듭 됨에 따라 하루씩 뒤로 밀려서 시작을 하게 되는데 이렇게 일반화 시킬 수 없는게 윤년의 존재이다. 그러면 몇번의 윤년을 거쳤는지 계산을 하고 그 뒤로 쭉 밀어버리면 되지 않나. 
1년부터 그 때까지 윤년을 한번 거쳤다고 하면 1년을 기준으로 거듭 된 햇수 + 윤년이 왔던 햇수를 더한만큼 뒤로 밀리는 거잖아. 

1년의 1월 1일은 월요일부터 시작을 한다. 1월은 31일 까지 있고 월요일 부터 시작을 한다. 위의 논리대로라면 2022년 1월 1일은 무슨 요일 부터 시작했겠는가. 
요일이 얼마만큼이나 뒤로 밀렸을지 계산을 하고 7을 나눠주면 되지
2022 - 1년 : 2021년이 지났다. + 윤년은 몇번이 있었는가. 그러면 2021년을 4로 나눠 근데 여기서 100으로 나눠지는데 400으로 안나눠지는 애들은 세면 안돼 
2021을 4로 나눈 다음에 100으로 나눠지는 애들을 빼 근데 400으로 나눠지면 또 더해
505 - 20 + 5 = 490

2021번 밀린거 + 추가로 윤년으로 밀린거 490  => 2511 
2511을 7로 나눈 나머지가 5임 그래서 2022년 월요일은 토요일이다. 

그러면 1년 2월 1일은 1월 1일을 기반으로 시작 요일을 구하게 될텐데 먼저 1년 1월 1일은 몇일까지 존재하느냐 그거를 return 받아서 그 결과를 기반으로(위에서의 윤년 고려)
2월의 시작 요일을 결정할 수 있게 되고 이와 마찬가지로 3월 ~ 12월까지 (1년 1월 ~ 12월 까지의) 시작 요일을 구할 수 있게 되고 
특정 연도까지 거쳐온 햇수를 기반으로 1년 그 해당 월을 기준으로 얼마나 밀렸을지와 그 달에 몇일까지 존재하는지를 기반으로 달력을 출력한다.

getLong method : 그 달에 몇일까지 있는지 정수형으로 return해주는 함수를 만들어서 사용하자
 	그냥 swtich? 일단 switch로 풀어보겠다.	
	1월 31일 2월 28일(+윤년) 3월 31일 4월

이제 달력 출력에 관하여 예를 들어 return 받는 값이 31이라면 그것을 반복문을 사용해서 어떻게 출력할 것이냐가 문제인데
요일이 밀리는 만큼 출력을 어떻게 할 것이냐가 문제다. 
for문에서 i의 초기값을 월요일 기준으로 밀리게 하면되는데 근데 문제는 1월 1일은 월요일 부터 시작인데 이건 큰 문제가 안될거 같은데 
일이 0 이고 월을 1로 두고 일단 1년 1월 1일을 기준으로 각자 시작하는 요일을 만들자. 이걸 배열로 ( 매핑이 있으면 편하겠지만 존재하지 않으므로 일단은)
	{1,4
	
	1월 1일이 월요일이므로 29일은 월요일이다. 1일에서 4주(28일)가 지난 것이므로 29일이 월요일이다. 30, 31 화 수가 되므로 1년 2월 1일은 목요일시작 (일요일 index를 0으로 취급하므로 목은4 토는 6)
	(더 간단한 수식으로 표현한다면 31일 / 7을 하면 나머지가 3이 남는다. 그래서 1 + 3이 되고 이를 이어받아서 이또한 method로 해볼까. 

이제 뭐해야 되지 1년에 해당하는 각 월의 시작요일은 구했다. 
	일요일을 기준으로 인덱스 0 ~ 토요일 6

이제 이 시작요일이 년도가 흐름에 따라 각 년도에 시작하는 요일이 다르다. 이를 구할 수 있는 method를 만들어보자. 
	흘러온 년도 : 주어진 년도 - 1(1년 시작이므로) //1년이 지날때마다 시작요일이 하루 씩밀림
	윤년  : 주어진 년도 / 4; (얘네 때문에 1년이 366이 되므로 하루씩 더밀림) @@추가@@근데 이게 그 윤년의 2월 이전에는 밀리지 않고 2월 이후부터 밀리기 시작하는 거잖아?@@
	100으로 나눠지는 년도 : 주어진 / 100; //윤년중에 100으로 나눠지는 애들은 평년으로 치기 떄문에 count에서 뺴준다.	
	400으로 나눠지는 년도 : 주어진 년도 / 400; @@ 근데 400년으로 나눠지면 윤년으로 치기 때문에 400으로 나눠서 빼줬던 애들은 다시 더해준다. 
	밀린 요일 : 흘러온 년도 - 100으로 나눠지는 년도 + 400으로 나눠지는 년도
	위의 밀린 요일 값을 7로 나눈 나머지 만큼 1년의 각 요일에서 뒤로 밀린다. 

	이후의 일주일로 한정되어 있으므로 바로 위의 값을 또 7로 나눠준다.
		>> 이부분은 다음 메소드에서 처리한다. 기존의 시작요일에서 pushedDay를 더하고 
		만약에 토요일(6)이었는데 2요일이 밀렸다고 하면 값은 8을 받겠죠 8을 7로 나누면 나머지는 1 > 1은 월요일이므로 정상적으로 작동하겠다. 
		만약에 원래 일요일(0)이었는데 3일이 밀림 그럼 인덱스 3 이를 7로 나누면 3 ㅇㅋ 

이제 마지막으로 달력 출력
	일단 제목행은 그냥 요일 적는거 뿐이고 
	1일을 어떻게 미뤄서 출력시킬 수 있을까..
	getLong()만큼 출력을 하는데, 그 달의 시작일이 3이라고 하면 수요일부터 출력되도록 해야한다 즉 i가 startDay 이상일 때 부터 get Long까지 출력을 하는데 달력이니 7일 마다 줄을 바꿔줘야 한다. 
	어짜피 i는 늘어나고 있기 때문에 따로 숫자를 만들어줄 필요는 없고 그냥 i가 0이 아니고 7의 배수가 되었을 때 줄바꿈을 하고 시작하면 되겠다.	
	startDay가 일치할 때

###디버깅 ####
passedYear가 4일 맞는가. 년도가 지남에 따라 하루씩 밀리잖아. 근데 4년에
passed 20201
year 100

!!아 initial에서 시작 요일을 구할 때 요일이 밀리는건 해당 월에 날짜 떄문에 밀리는게 아니라 전달의 날짜 수 때문에 밀리는거임

!! 해당 해가 윤년에 해당한다면 날짜가 추가로 밀리는게 3월부터 1일씩 추가로 밀리게 되는거임 
	- 1월은 아직 윤년의 영향을 받기 전이므로 추가로 밀릴 필요가 없음.
	- 초기 월을 설정하고 input year와 month가 주어졌을 때, 시작되는 날짜가 얼마나 밀리는지 계산을한다. 
		- 일단 1년은 1월 1일을 기준으로 시작요일 index를 정해놓는다. 
		- 1년을 기준으로 해당 년도까지 흘러온 년도와, 윤년을 고려해서 흐른 년도에 맞게 시작 요일을 뒤로 미뤄줘야 한다. 
		- 근데 여기서 주의할 점이, 윤달은 2월에 있다. 그 해당 년도에 모든 월이 하루씩 밀리는게 아니라 28일이던 2월이 갑자기 29일이 되어서 3월부터 추가로 1일씩 밀린 것이다. 
			- 그래서 윤년이어도 2월 이하는 윤년의 옇향을 추가로 받지 않고 3월 부터는 추가로 하루씩 밀리게 되는 것이다. 
			- 그럼 어디를 고쳐야할까..
			- 기존의 알고리즘이라면 년도 하나를 기준으로 그것이 윤년에 해당하면 원래 밀리는 것보다 하루씩 더밀리는 것으로 계산을 했다. 언뜻보면 별 문제가 없어보이지만 
			위의 사항들을 고려해봤을 때, 1, 2월은 추가로 미뤄 줄 필요가 없는 것이다. 그래서 더 미뤘던거를 하루씩 빼줘야한다.(그레고리력에서는 윤달을 고려하지 않아도 되기 때문에)
		** 디버깅** 돌릴 때 1년 1월은 1일이 월요일 시작이다 . 그러면 1900년 1월은 무슨요일 부터 시작할까요
			- 알고리즘에 의하면 1899년이 흘렀고 윤년은 475, 100년은 19, 400년은 4
			1899 + 475 - 19 + 4 = 2359 , 2359 % 7 = 0 이므로 그대로 월요일 시작이다. 근데 1월이므로 윤년의 영향을 받지 않았다. 그러므로 일요일 부터 시작을 해야한다..?
			2월 이하를 1씩 줄여줄 것이 아니라, 3월부터 1을 더해주는 식으로 해야겠는데, 지금 생각했던건 지나온 윤년에 의해서 밀린 값을 생각하기 때문에 원래 알고리즘이 맞는거고
			그 해가 윤년이라면 2월 부터 해당 년도에 대한 추가 1일이 생기기 때문에 3월 부터를 시작 위치를 1씩 미뤄야하지 않을까



